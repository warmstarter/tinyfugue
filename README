TinyFugue 50b8 with numerous patches and improvements

UTF8 support (--enable-widechar=yes)
/HELP has been spell checked, along with everything else
HTML documentation and html2tf found and returned to repo
ANSI log output (/help ansi_log) off by default
LOGs output prefix, such as timestamp (/help log_prefix) off by default
ERROR output prefix now adjustable (/help error_prefix) '%' by default
UNNAMED worlds not wrapped in () (/help oldunnamed) no-() by default
FG world switching can use TF4 stle (/help oldstylefg) off by default
@ALERT picks up on messages that could have been lost
/ as a prefix to /command sends to MU, as opposed to ///command
SSL now looks for GNU TLS
ATCP protocol support (--enable-atcp=yes) off by default
GMCP protocol support (--enable-gmcp=yes) off by default
OPTION 102 protocol support (--enable-option102=yes) off by default
MCCP protocol lockup issue resolved
RFC 2066 compliance for Telnet Charset Negotiation
PCRE unbundled and now can use system libraries
GCC 10 and CLANG support
64-bit crash issues resolved
MULTI-address hostname crash issue resolved
OS X compile issues resolved
BUFFERS increased to reflect more modern computing resources
TF-LIB being maintained as well.

Plus numerous bug fixes, clean-up, and needed code base
clean-up and modernization.

Significant effort has been put into finding the various community
patches for TF50b8 and integrating them all into one place. There
are still several patches in the queue waiting to be examined and
then potentially applied.

In addition, new work has been added to this code base and will
probably continue to be for some time. The intention is to make sure
a well loved piece of software is still able to be run on modern
platforms and future platforms, increased stability, and then lastly
to add some additional features in-line with the existing codebase.

Similar efforts are being done with TinyFugue Macros, and some may later
be integrated into tf-lib:

https://github.com/warmstarter/tinyfugue-scripts

Deprecations:

NO_FLOAT deprecated. This has been broken for over a decade and has little
purpose on modern computer systems.

OS/2 deprecated. This was not being maintained and likely not used by anyone.
If needed the old sources are in the git history.

CYGWIN deprecated in favor of WSL for Windows, to better keeps platofmrs
in-sync and remove issues.

BeOS deprecate as likely no longer used. Should still compile, but might
require some modifications for installation of binary, no way to test.

======

Unicode notes:
  "Release" is the branch you want.
  On Debian or Ubuntu, make sure you apt-get libicu-dev before running
  ./configure.
  There is a known and easily triggered bug: The backspace, delete, and
  arrow keys move by bytes, not by characters. For now, editing a line
  with multibyte characters will send XML hexadecimal escape codes
  if unencodeable bytes are in the input box.
  I will gladly accept pull requests.

  Setting your terminal to send ^H instead of ^? for backspace mitigates
  some, but not all of the backspace issues.

  For servers that don't negotiate charsets, /set default_charset=NAME
  before defining a world with /addworld or /test addworld(). I recommend
  putting /set default_charset=Latin-1 at the top of your worlds.tf.

======



                       INSTALLING TINYFUGUE

TinyFugue can be installed and run on UNIX-like systems, Mac OS X,
and Win32.  For instructions, see the README file in the appropriate
directory.  For information on unofficial versions of TF for other
operating systems, see the TF web page at http://tinyfugue.sourceforge.net/.

"Make" options
--------------

Options are not available on all systems.  To use an option, give it as
an argument to the installation program (e.g., "make clean").

 all		Compile, but do not install (the "install" option should be
			run later to install the files).
 install	Compile (if you haven't already) and install.  The default
			installation locations depend on the operating system.
 clean		Remove object files and other junk from source directory.
 uninstall	Remove tf executable, help files, and library from their
			installed locations.


Public Installation
-------------------

Some features of TF can be disabled for secure public installation, by
using one of these /restrict commands in %{TFLIBDIR}/local.tf:

    /restrict SHELL  Prevents all access to shell or external commands.
                     Disables TF builtins "/sh" and "/quote !", and
                     uncompression during /load and /help.

    /restrict FILE   Prevents reading and writing of files.  Disables
                     TF builtins "/load", "/save", "/saveworld", "/log",
                     and "/quote '", and sockmload feature.
                     Implies /restrict shell.

    /restrict WORLD  Prevents the user from defining new worlds and
                     connecting to undefined worlds.  TF builtins
                     /addworld and the "/world <host> <port>" semantics
                     are disabled.  Implies /restrict file.


Terminal Handling
-----------------

If the default terminal handling option does not work, tf can be
configured to use vt100 codes or nothing at all.  See the README
file in the subdirectory corresponding to your operating system.


Compression
-----------

If you are short on disk space, you can compress the helpfile and
library files (except stdlib.tf).  Make sure the COMPRESS_SUFFIX
and COMPRESS_READ macros are set correctly; set them in the
%{TFLIBDIR}/local.tf file if needed.  Note that compression can not
be used if /restrict is used.


Firewalls
---------

TF can be made to connect through a generic proxy server by setting
the %proxy_host variable at runtime.  See "/help proxy".

Also see the README file in the subdirectory corresponding to your
operating system to see if tf has transparent firewall support on your
system.


Last Resort
-----------

If you have an installation problem or other system-specific problem
that is not described in this README or the README in the subdirectory
for your system, contact the person who supports TF on your system.  If
you have a problem that is not system-related, ask for support on
http://tinyfugue.sourceforge.net/ or contact the author by email at
kenkeys@users.sourceforge.net.  Please provide the following information:

    The version of TF (type "/version" in tf).
    The operating system version (on unix, type "uname -a" in the shell).
    If tf won't compile, send the output of configure and make (in plaintext
        form, please).
    If you have a bug or core, give ALL error messages from tf.
    If you have a bug or core, describe what you did or what happened
        before the problem, and if the problem is repeatable.
    If you have a core file, do NOT send it.


Credits
-------

This fork of TinyFugue is currently being supported by Kruton,
Sketch, and wstarter. It also includes assorted patches developed
by various community members in the years since TF saw saw it's
final release.

TinyFugue is Copyright (C) 1993-2007 Ken Keys (kenkeys@users.sourceforge.net)

For a long time TinyFugue was written, maintained, and copyrighted
by Ken Keys ("Hawkeye"), who can be reached by email at kkeys@ucsd.edu.
His final release was 50b8 in January 2007, but he is still active
in giving support at https://sourceforge.net/p/tinyfugue

TinyFugue versions 1.5.3 and earlier were written by Greg Hudson
("Explorer_Bob"), without whom I would have never gotten into this mess.

TinyFugue was initially derived from tinytalk, a unix client written by
Anton Rang ("Tarrant") and modified by Leo Plotkin ("Grod").

Additional thanks to Jeff Prothero ("Cynbe"), Bruce Sterling Woodcock
("Bruce"), David Moore ("OliverJones"), Ben Jackson ("Ben"), the mudders of
glia.biostr.washington.edu, and everyone else who tested, found bugs,
or came up with suggestions, and to Jim Lick ("Jingoro") for providing
tcp.com services.

============================================
TinyFugue for Mac OS X

You must have the developer tools installed on your system.
Open a shell window, and follow the instructions in unix/README.

----------------------------------------------------------------

TinyFugue for Win32

The likely best option for running TinyFugue under Windows is to
get 'Windows Subsystem for Linux'. This should be straight-forward
and give you an almost identical experience to a TinyFugue on UNIX
like systems, but it has not yet been tested.

https://docs.microsoft.com/en-us/windows/wsl/install-win10

Once installed, open a shell window, and follow the instructions in
unix/README.
